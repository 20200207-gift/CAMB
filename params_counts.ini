#Parameters for CAMB with 21cm, lensing and number counts
#Samples file for counts power spectra (and cross-correlations with CMB)

#output_root is prefixed to output file names
output_root = counts_test

#for 21cm C_l with sharp window use get_transfer=T, transfer_21cm_cl=T
#for broad window and other sources use get_scalar_cls=T
get_scalar_cls = T
get_transfer   = F
get_vector_cls = F
get_tensor_cls = F

want_CMB = T

#Whether transfer functions are 21cm (monopole and velocity), or standard
Do21cm = F

l_max_scalar      = 400
k_eta_max_scalar  = 4500


# 0: linear, 1: non-linear matter power (HALOFIT), 2: non-linear C_l (HALOFIT approx)
#Or compile with NONLINEAR = nonlinear_PT to use perturbation theory, e.g. for 21cm non-linear approx
do_nonlinear = 2

#only use limber approx if you don't want cross-correlation
limber_windows  = F

#output 21cm spectra in mK (rather than dimensionless)
use_mK = T

### 21cm  - not used with counts###
line_basic = T
line_distortions = T
line_extra = F
line_phot_quadrupole = F
line_phot_dipole = F
line_reionization = F


#### number counts ####
#whether spectra include lensing effect
DoRedshiftLensing = T

counts_density  = T
counts_redshift = T
counts_radial   = T
counts_timedelay = T
counts_ISW =T
counts_velocity =T
counts_potential = T

#counts_evolve =T allows for non-constant comoving source density
#uses function counts_background_z in modules_redshift space;
#if T by default assumes window includes all sources; if F then assumes constant comoving source density
counts_evolve   = F

### window functions ###

#Number of z-windows to use for sources. assumed Gaussian - edit Window_f_a in modules.f90.
num_redshiftwindows = 1

#Set of indexed parameters for each window function

#Redshift of the window for C_l
#Default assumes a Gaussin; write your own distribution function in modules.f90

redshift(1) = 3
redshift_kind(1) = counts
redshift_bias(1) = 2
redshift_sigma(1) = 0.7
#for a magnitude limited survey; often called s or p, assumed constant
redshift_dlog10Ndm(1) = 0.42


massless_neutrinos = 3.04
massive_neutrinos  = 0
nu_mass_eigenstates = 1
nu_mass_degeneracies = 1 
#nu_mass_fractions = .4285714286 .5714285714 
nu_mass_fractions = 1
#massive_nu_approx: 0 - integrate distribution function
#                   1 - switch to series in velocity weight once non-relativistic
#                   2 - use fast approximate scheme (CMB only- accurate for light neutrinos)
massive_nu_approx = 3

#Settings for transfer functions/matter power spectrum/21cm sharp-z power spectrum
transfer_high_precision = T
transfer_kmax           = 10
transfer_k_per_logint   = 0
transfer_num_redshifts  = 1
transfer_redshift(1)    = 0


#Whether to compute 21cm C_l from transfer functions for sharp redshift window
#using only monopole source and redshift distortions 
transfer_21cm_cl        = F

#Whether to turn off small-scale late time radiation hierarchies (save time,v. accurate)
# not tested with redshift window functions
do_late_rad_trunction   = F

RECFAST_fudge = 1.14

#if do_lensing then scalar_output_file contains additional columns of l^4 C_l^{pp} and l^3 C_l^{pT}
#where p is the projected potential. Output lensed CMB Cls (without tensors) are in lensed_output_file below.
do_lensing     = F

#Maximum multipole and k*eta. 
#  Note that C_ls near l_max are inaccurate (about 5%), go to 50 more than you need
#  Lensed power spectra are computed to l_max_scalar-250 where accurate at %-level
#  For high accuracy lensed spectra set l_max_scalar = (l you need) + 500
#  To get accurate lensed BB need to have l_max_scalar>2000, k_eta_max_scalar > 10000
#  Otherwise k_eta_max_scalar=2*l_max_scalar usually suffices
#  Tensor settings should be less than or equal to the above
l_max_tensor      = 500
k_eta_max_tensor  = 4000

#Main cosmological parameters, neutrino masses are assumed degenerate
# If use_phyical set phyiscal densities in baryone, CDM and neutrinos + Omega_k
use_physical   = T
ombh2          = 0.223253E-01
omch2          = 0.104284E+00
omk            = 0
omnuh2         = 0
hubble         = 0.731586E+02
#effective equation of state parameter for dark energy, assumed constant
w              = -1
#constant comoving sound speed of the dark energy (1=quintessence)
cs2_lam        = 1


#if use_physical = F set parameters as here
#omega_baryon   = 0.0462
#omega_cdm      = 0.2538
#omega_lambda   = 0.7
#omega_neutrino = 0

#massless_neutrinos is the effective number (for QED + non-instantaneous decoupling)
temp_cmb           = 2.725
helium_fraction    = 0.24

#Reionization (assumed sharp), ignored unless reionization = T
reionization         = T
re_use_optical_depth = T
re_optical_depth     = 0.912305E-01
#If re_use_optical_depth = F then use following, otherwise ignored
re_redshift          = 12
re_ionization_frac   = 1

#Initial power spectrum, amplitude, spectral index and running
initial_power_num         = 1
scalar_amp(1)             = 2.0424e-009
scalar_spectral_index(1)  = 0.954663E+00
scalar_nrun(1)            = 0
tensor_spectral_index(1)  = 0
#ratio is that of the initial tens/scal power spectrum amplitudes
initial_ratio(1)          = 0.1
#note vector modes use the scalar settings above

#Initial scalar perturbation mode (adiabatic=1, CDM iso=2, Baryon iso=3, 
# neutrino density iso =4, neutrino velocity iso = 5) 
initial_condition   = 1
#If above is zero, use modes in the following (totally correlated) proportions
#Note: we assume all modes have the same initial power spectrum
initial_vector = -1 0 0 0 0

#For vector modes: 0 for regular (neutrino vorticity mode), 1 for magnetic
vector_mode = 0

#Normalization
COBE_normalize = F
##CMB_outputscale scales the output Cls
#To get MuK^2 set realistic initial amplitude (e.g. scalar_amp(1) = 2.3e-9 above) and
#otherwise for dimensionless transfer functions set scalar_amp(1)=1 and use
CMB_outputscale = 1
#CMB_outputscale = 7.4311e12

#Transfer function settings, transfer_kmax=0.5 is enough for sigma_8
transfer_filename(1)    = 
#Matter power spectrum output against k/h in units of h^3 Mpc^{-3}
transfer_matterpower(1) = 
#21cm C_l for sharp window
transfer_cl_filename(1) = 

#Output files not produced if blank. make camb_fits to use use the FITS setting.
scalar_output_file = scalCls.dat
scalar_covariance_output_file = scalCovCls.dat
vector_output_file = vecCls.dat
tensor_output_file = tensCls.dat
total_output_file  = totCls.dat
lensed_output_file = lensedCls.dat
FITS_filename      = scalCls.fits

##Optional parameters to control the computation speed,accuracy and feedback

#If feedback_level > 0 print out useful information computed about the model
feedback_level = 1

# 1: curved correlation function, 2: flat correlation function, 3: inaccurate harmonic method
lensing_method = 1
accurate_BB =T

#Whether you are bothered about polarization. 
accurate_polarization   = T

#Whether you are bothered about percent accuracy on EE from reionization
accurate_reionization   = T

#whether or not to include neutrinos in the tensor evolution equations
do_tensor_neutrinos     = F

#if true, get accurate gas temperature evolution given recombination model including
#approximate perturbed recombination; also affects baryons for k >~ 300/Mpc.
evolve_delta_xe = F

#Computation parameters
#if number_of_threads=0 assigned automatically
number_of_threads       = 0

#Default scalar accuracy is about 0.3% (except lensed BB). 
#For 0.1%-level try accuracy_boost=2, l_accuracy_boost=2.

#Increase accuracy_boost to decrease time steps, use more k values,  etc.
#Decrease to speed up at cost of worse accuracy. Suggest 0.8 to 3.
accuracy_boost          = 1

#Larger to keep more terms in the hierarchy evolution. 
l_accuracy_boost        = 1

#Increase to use more C_l values for interpolation.
#Increasing a bit will improve the polarization accuracy at l up to 200 -
#interpolation errors may be up to 3%
#Decrease to speed up non-flat models a bit
l_sample_boost          =  1